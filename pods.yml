apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
    selector:
      io.kompose.service: db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: orionphpmyadmin
    name: orionphpmyadmin
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: orionphpmyadmin
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: oriontalk
    name: oriontalk
  spec:
    ports:
    - name: "9080"
      port: 9080
      targetPort: 9080
    - name: "9443"
      port: 9443
      targetPort: 9443
    selector:
      io.kompose.service: oriontalk
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: db
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: db
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: orion-talk-service
          - name: MYSQL_PASSWORD
            value: orion-talk-service
          - name: MYSQL_ROOT_PASSWORD
            value: orion-talk-service
          - name: MYSQL_USER
            value: orion-talk-service
          image: mysql:latest
          imagePullPolicy: ""
          name: orion-mysql
          ports:
          - containerPort: 3306
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: database
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: database
          persistentVolumeClaim:
            claimName: database
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: database
    name: database
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: orionphpmyadmin
    name: orionphpmyadmin
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: orionphpmyadmin
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: orionphpmyadmin
      spec:
        containers:
        - env:
          - name: PMA_ARBITRARY
            value: "1"
          image: phpmyadmin/phpmyadmin:latest
          imagePullPolicy: ""
          name: orion-phpmyadmin
          ports:
          - containerPort: 80
          resources: {}
          volumeMounts:
          - mountPath: /sessions
            name: orionphpmyadmin-claim0
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: orionphpmyadmin-claim0
          persistentVolumeClaim:
            claimName: orionphpmyadmin-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: orionphpmyadmin-claim0
    name: orionphpmyadmin-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: oriontalk
    name: oriontalk
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: oriontalk
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o pods.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: oriontalk
      spec:
        containers:
        - image: rodrigoprestesmachado/orion-talk-image:version-0.1
          imagePullPolicy: ""
          name: orion-talk-service
          ports:
          - containerPort: 9080
          - containerPort: 9443
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}

